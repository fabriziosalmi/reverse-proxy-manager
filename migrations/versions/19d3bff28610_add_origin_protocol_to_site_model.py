"""Add origin_protocol to Site model

Revision ID: 19d3bff28610
Revises: 82935383684c
Create Date: 2025-04-23 17:23:29.020510

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = '19d3bff28610'
down_revision = '82935383684c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    
    # Only create config_versions table if it doesn't exist
    if 'config_versions' not in tables:
        op.create_table('config_versions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('site_id', sa.Integer(), nullable=False),
        sa.Column('commit_hash', sa.String(length=64), nullable=False),
        sa.Column('message', sa.Text(), nullable=True),
        sa.Column('author', sa.String(length=64), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    
    # Check if deployment_logs table exists
    if 'deployment_logs' in tables:
        with op.batch_alter_table('deployment_logs', schema=None) as batch_op:
            columns = [c['name'] for c in inspector.get_columns('deployment_logs')]
            if 'user_id' not in columns:
                batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
                batch_op.create_foreign_key('fk_deployment_logs_user_id_users', 'users', ['user_id'], ['id'])

    # Check if site_nodes table exists
    if 'site_nodes' in tables:
        with op.batch_alter_table('site_nodes', schema=None) as batch_op:
            columns = [c['name'] for c in inspector.get_columns('site_nodes')]
            if 'discovered_at' not in columns:
                batch_op.add_column(sa.Column('discovered_at', sa.DateTime(), nullable=True))

    # Check if sites table exists
    if 'sites' in tables:
        with op.batch_alter_table('sites', schema=None) as batch_op:
            columns = [c['name'] for c in inspector.get_columns('sites')]
            if 'origin_protocol' not in columns:
                batch_op.add_column(sa.Column('origin_protocol', sa.String(length=10), nullable=False))
            if 'is_discovered' not in columns:
                batch_op.add_column(sa.Column('is_discovered', sa.Boolean(), nullable=True))
            
            # Only alter user_id if it exists
            if 'user_id' in columns:
                batch_op.alter_column('user_id',
                    existing_type=sa.INTEGER(),
                    nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    
    if 'sites' in tables:
        with op.batch_alter_table('sites', schema=None) as batch_op:
            columns = [c['name'] for c in inspector.get_columns('sites')]
            if 'user_id' in columns:
                batch_op.alter_column('user_id',
                    existing_type=sa.INTEGER(),
                    nullable=False)
            if 'is_discovered' in columns:
                batch_op.drop_column('is_discovered')
            if 'origin_protocol' in columns:
                batch_op.drop_column('origin_protocol')

    if 'site_nodes' in tables:
        with op.batch_alter_table('site_nodes', schema=None) as batch_op:
            columns = [c['name'] for c in inspector.get_columns('site_nodes')]
            if 'discovered_at' in columns:
                batch_op.drop_column('discovered_at')

    if 'deployment_logs' in tables:
        with op.batch_alter_table('deployment_logs', schema=None) as batch_op:
            columns = [c['name'] for c in inspector.get_columns('deployment_logs')]
            if 'user_id' in columns:
                batch_op.drop_constraint('fk_deployment_logs_user_id_users', type_='foreignkey')
                batch_op.drop_column('user_id')

    if 'config_versions' in tables:
        op.drop_table('config_versions')
    # ### end Alembic commands ###
